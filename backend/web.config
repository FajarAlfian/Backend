<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <handlers>
      <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified" />
    </handlers>
    <aspNetCore processPath="dotnet" arguments=".\backend.dll" stdoutLogEnabled="false" stdoutLogFile=".\logs\stdout" hostingModel="inprocess" />
    
    <!-- CORS Headers for IIS -->
    <httpProtocol>
      <customHeaders>
        <add name="Access-Control-Allow-Origin" value="http://localhost:3000" />
        <add name="Access-Control-Allow-Methods" value="GET, POST, PUT, DELETE, OPTIONS" />
        <add name="Access-Control-Allow-Headers" value="Content-Type, Authorization, X-Requested-With" />
        <add name="Access-Control-Allow-Credentials" value="true" />
      </customHeaders>
    </httpProtocol>
    
    <!-- Handle preflight OPTIONS requests and Swagger routing -->
    <rewrite>
      <rules>
        <rule name="Handle OPTIONS" stopProcessing="true">
          <match url=".*" />
          <conditions>
            <add input="{REQUEST_METHOD}" pattern="OPTIONS" ignoreCase="true" />
          </conditions>
          <action type="CustomResponse" statusCode="200" statusReason="OK" statusDescription="OK" />
        </rule>
        
        <!-- Swagger UI routing -->
        <rule name="Swagger UI" stopProcessing="false">
          <match url="^(api-docs|swagger)" />
          <action type="None" />
        </rule>
        
        <!-- Static files for Swagger -->
        <rule name="Static Files" stopProcessing="false">
          <match url="^(wwwroot|swagger-ui)" />
          <action type="None" />
        </rule>
      </rules>
    </rewrite>
    
    <!-- Security headers -->
    <httpProtocol>
      <customHeaders>
        <add name="X-Frame-Options" value="DENY" />
        <add name="X-Content-Type-Options" value="nosniff" />
        <add name="X-XSS-Protection" value="1; mode=block" />
        <add name="Referrer-Policy" value="strict-origin-when-cross-origin" />
      </customHeaders>
    </httpProtocol>
    
    <!-- Static files handling -->
    <staticContent>
      <remove fileExtension=".css" />
      <mimeMap fileExtension=".css" mimeType="text/css" />
      <remove fileExtension=".js" />
      <mimeMap fileExtension=".js" mimeType="application/javascript" />
      <remove fileExtension=".json" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <remove fileExtension=".woff" />
      <mimeMap fileExtension=".woff" mimeType="font/woff" />
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".woff2" mimeType="font/woff2" />
    </staticContent>
    
    <!-- Compression -->
    <urlCompression doStaticCompression="true" doDynamicCompression="true" />
    
    <!-- Caching for static files -->
    <caching enabled="true" enableKernelCache="true">
      <profiles>
        <add extension=".css" policy="CacheForTimePeriod" kernelCachePolicy="CacheForTimePeriod" duration="1.00:00:00" />
        <add extension=".js" policy="CacheForTimePeriod" kernelCachePolicy="CacheForTimePeriod" duration="1.00:00:00" />
        <add extension=".json" policy="DontCache" kernelCachePolicy="DontCache" />
      </profiles>
    </caching>
    
    <!-- Logging -->
    <httpLogging>
      <selectiveLogging>
        <add logFieldName="c-ip" />
        <add logFieldName="cs-username" />
        <add logFieldName="cs-method" />
        <add logFieldName="cs-uri-stem" />
        <add logFieldName="cs-uri-query" />
        <add logFieldName="sc-status" />
        <add logFieldName="sc-bytes" />
        <add logFieldName="cs-bytes" />
        <add logFieldName="time-taken" />
        <add logFieldName="cs(User-Agent)" />
        <add logFieldName="cs(Referer)" />
      </selectiveLogging>
    </httpLogging>
  </system.webServer>
</configuration>
